const TOKEN = "8ac697523dd0cb753e477237613a9b475f8ab5da4db30d0a32c0cd112d062973c681a04e30a3bd2036693";
const ID    = 202257406;

const { VK, Keyboard } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest'); 
const utils = {
    sp: (int) => {
        int = int.toString();
        return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
    },
    rn: (int, fixed) => {
        if (int === null) return null;
        if (int === 0) return '0';
        fixed = (!fixed || fixed < 0) ? 0 : fixed;
        let b = (int).toPrecision(2).split('e'),
            k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
            c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
            d = c < 0 ? c : Math.abs(c),
            e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

            e = e.replace(/e/g, '');
            e = e.replace(/\+/g, '');
            e = e.replace(/Infinity/g, '–î–û–•–ï–†–ê');

        return e;
    },
    gi: (int) => {
        int = int.toString();

        let text = ``;
        for (let i = 0; i < int.length; i++)
        {
            text += `${int[i]}&#8419;`;
        }

        return text;
    },
    decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
    random: (x, y) => {
        return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
    },
    pick: (array) => {
        return array[utils.random(array.length - 1)];
    }
}
let users = require('./users.json');
let buttons = [];

async function saveUsers()
{
    require('fs').writeFileSync('./users.json', JSON.stringify(users, null, '\t'));
    return true;
}
setInterval(async () => {
    await saveUsers();
    console.log('saved');
}, 30000);


vk.setOptions({ token: TOKEN, pollingGroupId: ID });
const { updates, snippets } = vk;

updates.startPolling()
.then(() => {
    console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!
        –°–æ–∑–¥–∞—Ç–µ–ª—å - –î–∞–Ω–∏–∏–ª –ö–æ–¥–µ—Ä–æ–≤(–õ–µ–±–µ–¥–µ–≤)`);
})
updates.on('message', async (message) => {
    if(Number(message.senderId) <= 0) return;
    if(/\[club169600143\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club169600143\|(.*)\]/ig, '').trim();

    if(!users.find(x=> x.id === message.senderId))
    {
        const [user_info] = await vk.api.users.get({ user_id: message.senderId });
        const date = new Date();

        users.push({
            id: message.senderId,
            uid: users.length,
            balance: 5000,
            regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
            tag: user_info.first_name,
            seno: 0,
            ferms: 1,
            exp: 0,
            level: 0,
            admin: 0
        });
    }

    message.user = users.find(x=> x.id === message.senderId);
    if(message.user.ban) return;

    const bot = (text, params) => {
        return message.send(`${message.user.mention ? `@id${message.user.id} (${message.user.tag})` : `${message.user.tag}`}, ${text}`, params);
    }

    const command = commands.find(x=> x[0].test(message.text));
    if(!command) return;

    if(message.user.exp >= 24)
    {
        message.user.exp = 1;
        message.user.level += 1;
    }

    message.args = message.text.match(command[0]);
    await command[1](message, bot);

    console.log(`–ë—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${message.text}`)
});

const cmd = {
    hear: (p, f) => {
        commands.push([p, f]);
    }
}
cmd.hear(/^(?:–ø–æ–º–æ—â—å|–∫–æ–º–∞–Ω–¥—ã|–º–µ–Ω—é|help|commands|cmds|menu|–Ω–∞—á–∞—Ç—å|start)$/i, async (message, bot) => {
    await bot(`–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
        ‚†Äüí° –û—Å–Ω–æ–≤–Ω—ã–µ:
        ‚†Ä‚†Ä‚†Ä‚†Äüßô‚Äç‚ôÇ –ü—Ä–æ—Ñ–∏–ª—å
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äüê∑ –û —Ñ–µ—Ä–º–µ
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äüåª –ü—Ä–æ–¥–∞—Ç—å —Å–µ–Ω–æ [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ|–≤—Å–µ]
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Äü§ù –ü–µ—Ä–µ–¥–∞—Ç—å [id] [—Å—É–º–º–∞]
        ‚†Äüåª–§–µ—Ä–º–∞:
        ‚†Ä‚†Ä‚†Ä‚†Äü•≥ –£–ª—É—á—à–µ–Ω–∏—è
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äü•≥ –£–ª—É—á—à–µ–Ω–∏—è [1-9]
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äüåª –°–æ–±—Ä–∞—Ç—å —Å–µ–Ω–æ

        ‚†ÄüöÄ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:
        ‚†Ä‚†Ä‚†Ä‚†Äüî¶ –°–µ–π—Ñ [—á–∏—Å–ª–æ 10-99]`);
    message.send({keyboard:
        Keyboard.keyboard([
        ([
            Keyboard.textButton({
                label: "–£–ª—É—á—à–µ–Ω–∏—è",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–ü—Ä–æ—Ñ–∏–ª—å",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–û —Ñ–µ—Ä–º–µ",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–ü–æ–º–æ—â—å",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–°–±–æ—Ä",
                color: Keyboard.PRIMARY_COLOR
            })
        ])
        ])
    });
});
cmd.hear(/^(?:–ø—Ä–æ—Ñ|–ø—Ä–æ—Ñ–∏–ª—å)$/i, async (message, bot) => {
    await bot(`–≤–æ—Ç —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:
        ‚†Ä‚†ÄüÜî ID: ${message.user.uid}‚†Ä‚†Ä
        ‚†Ä‚†Ä‚†Ä‚†Äüí∞ –î–µ–Ω—å–≥–∏: ${utils.sp(message.user.balance)}$
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äüåª –°–µ–Ω–æ: ${utils.sp(message.user.seno)}
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Äüê∑ –§–µ—Ä–º—ã: ${utils.sp(message.user.ferms)}
        ‚†Ä‚†Äüî∂ –£—Ä–æ–≤–µ–Ω—å: ${message.user.level}
        ‚†Ä‚†Ä‚†Ä‚†Äüî∑ Exp: ${message.user.exp}
        ‚†Ä‚†Ä
       ‚†Ä‚†Ä‚åö –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}`);
});
cmd.hear(/^(?:–æ —Ñ–µ—Ä–º–µ)$/i, async (message, bot) => {
    await bot(`–≥–∞–π–¥:
        ‚†Ä‚†Äüåª –°–µ–Ω–æ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–∞ —Å–±–æ—Ä
        ‚†Ä‚†Ä‚ùó 5 —Å–µ–Ω–∞ –∑–∞ 1 —Ñ–µ—Ä–º—É
        ‚†Ä‚†Ä‚†Ä‚†Ä–û–¥–Ω–æ —Å–µ–Ω–æ —Å—Ç–æ–∏—Ç 50$`);
});
cmd.hear(/^(?:–ø—Ä–æ–¥–∞—Ç—å —Å–µ–Ω–æ)\s(.*)$/i, async (message, bot) => {
    message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
    message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
    message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
    message.args[1] = message.args[1].replace(/(–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
    if (message.user.seno < message.args[1]){
        await bot('—É –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Å–µ–Ω–∞! üò¢');
    }
    else {
        message.user.seno -= message.args[1];
        message.user.balance += message.args[1] * 50;
        await bot('–≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ —Å–µ–Ω–æ! üõí');
    }
});
cmd.hear(/^(?:—Å–µ–π—Ñ)\s([0-9]+)$/i, async (message, bot) => {
    if(message.args[1] < 10 || message.args[1] >= 100) return;

    const int = utils.random(10, 99);
    message.args[1] = Number(message.args[1]);

    if(int === message.args[1])
    {
        message.user.balance += 10000000;
        return bot(`–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ.
        üí≤ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 10.000.000$`);
    } else if(int !== message.args[1])
    {
        return bot(`–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ "${int}"
        üéâ –ù–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ.
        
        –ï—Å–ª–∏ –≤—ã —É–≥–∞–¥–∞–µ—Ç–µ –∫–æ–¥, —Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10.000.000$`);
    }
});
cmd.hear(/^(?:–≤—ã–¥–∞—Ç—å)\s(.*)$/i, async (message, bot) => {
    if(message.user.admin < 2) return
    message.args[1] = message.args[1].replace(/(\.|\,)/ig, '');
    message.args[1] = message.args[1].replace(/(–∫|k)/ig, '000');
    message.args[1] = message.args[1].replace(/(–º|m)/ig, '000000');
    message.user.balance += Number(message.args[1]);
    return bot('–≤—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ ' + utils.sp(message.args[1]) + '$');
});
cmd.hear(/^(?:—É–ª—É—á—à–µ–Ω–∏—è|—É–ª—É—á)$/i, async (message, bot) => {
    return bot(`–≤–æ—Ç –≤—Å–µ —É–ª—É—á—à–µ–Ω–∏—è:
        ‚†Ä–§–µ—Ä–º–µ—Ä—ã:
        ‚†Ä‚†Ä1.–§–µ—Ä–º–µ—Ä[1] - 20.000$
        ‚†Ä‚†Ä‚†Ä‚†Ä2.–§–µ—Ä–º–µ—Ä[2] - 35.000$
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä3.–§–µ—Ä–º–µ—Ä[3] - 65.000$
        ‚†Ä–ú–∞—à–∏–Ω—ã:
        ‚†Ä‚†Ä4.–¢—Ä–∞–∫—Ç–æ—Ä[5] - 125.000$
        ‚†Ä‚†Ä‚†Ä‚†Ä5.–°—É–ø–µ—Ä —Ç—Ä–∞–∫—Ç–æ—Ä[10] - 240.000$
        ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä6.New Holland T9.670[25] - 470.000$`);
    message.send({keyboard:
        Keyboard.keyboard([
        ([
            Keyboard.textButton({
                label: "–£–ª—É—á—à–µ–Ω–∏—è",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–ü—Ä–æ—Ñ–∏–ª—å",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–û —Ñ–µ—Ä–º–µ",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–ü–æ–º–æ—â—å",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–°–±–æ—Ä",
                color: Keyboard.PRIMARY_COLOR
            })
        ])
        ])
    });
});
cmd.hear(/^(?:—É–ª—É—á—à–µ–Ω–∏—è|—É–ª—É—á)\s([0-9]+)$/i, async (message, bot) => {
    if(message.args[1] < 1 || message.args[1] >= 7) return;
    if (message.args[1] == 1 && message.user.balance >= 20000){
        message.user.balance -= 20000;
        message.user.ferms += 1;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else if (message.args[1] == 2 && message.user.balance >= 35000){
        message.user.balance -= 35000;
        message.user.ferms += 2;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else if (message.args[1] == 3 && message.user.balance >= 65000){
        message.user.balance -= 65000;
        message.user.ferms += 3;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else if (message.args[1] == 4 && message.user.balance >= 125000){
        message.user.balance -= 125000;
        message.user.ferms += 5;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else if (message.args[1] == 5 && message.user.balance >= 240000){
        message.user.balance -= 240000;
        message.user.ferms += 10;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else if (message.args[1] == 6 && message.user.balance >= 470000){
        message.user.balance -= 470000;
        message.user.ferms += 25;
        return bot('–≤—ã –∫—É–ø–∏–ª–∏ —É–ª—É—á—à–µ–Ω–∏–µ!!ü•≥')
    }
    else {
        return bot('–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥!')
    }
    message.send({keyboard:
        Keyboard.keyboard([
        ([
            Keyboard.textButton({
                label: "–£–ª—É—á—à–µ–Ω–∏—è",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–ü—Ä–æ—Ñ–∏–ª—å",
                color: Keyboard.PRIMARY_COLOR
            }),
            Keyboard.textButton({
                label: "–û —Ñ–µ—Ä–º–µ",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–ü–æ–º–æ—â—å",
                color: Keyboard.PRIMARY_COLOR
            })
            Keyboard.textButton({
                label: "–°–±–æ—Ä",
                color: Keyboard.PRIMARY_COLOR
            })
        ])
        ])
    });
});
cmd.hear(/^(?:—Å–æ–±—Ä–∞—Ç—å —Å–µ–Ω–æ|—Å–±–æ—Ä|—Å–æ–±—Ä–∞—Ç—å)$/i, async (message, bot) => {
    message.user.seno += message.user.ferms;
    await bot('–≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ –∏ —Å–æ–±—Ä–∞–ª–∏ ' + message.user.ferms + ' —Å–µ–Ω–∞!');
     message.send({keyboard:
        Keyboard.keyboard([
        ([
            Keyboard.textButton({
                label: "–°–±–æ—Ä",
                color: Keyboard.PRIMARY_COLOR
            })
        ])
        ])
    });
});
cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
    message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
    message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
    message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
    message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);

    if(!Number(message.args[2])) return;
    message.args[2] = Math.floor(Number(message.args[2]));

    if(message.args[2] <= 0) return;

    if(message.args[2] > message.user.balance) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
        –≤–∞—à –±–∞–ª–∞–Ω—Å: ${utils.sp(message.user.balance)}$`);
    else if(message.args[2] <= message.user.balance)
    {
        let user = users.find(x=> x.uid === Number(message.args[1]));
        if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

        if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

        message.user.balance -= message.args[2];
        user.balance += message.args[2];

        await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])}$`);
        if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])}$!` });
    }
});